import pandas as pd

def find_ids_within_ten_percentage_threshold(df, reference_id):
  """
  This function takes a DataFrame and a reference ID and returns a sorted list of IDs within 10% of the reference ID's average distance.

  Args:
    df: A DataFrame with columns 'id_start', 'id_end', and 'distance'.
    reference_id: An integer representing the reference ID.

  Returns:
    A sorted list of IDs within 10% of the reference ID's average distance.
  """
  # Filter data for the reference ID
  reference_data = df[df['id_start'] == reference_id]

  # Calculate average distance for the reference ID
  average_distance = reference_data['distance'].mean()

  # Calculate the 10% threshold range
  threshold_range = (average_distance * 0.9, average_distance * 1.1)

  # Filter IDs within the threshold range
  filtered_df = df[(df['id_start'] == reference_id) & (df['distance'].between(*threshold_range))]

  # Extract and sort IDs
  id_list = filtered_df['id_end'].tolist()
  id_list.sort()

  return id_list

# Example usage
df = pd.DataFrame({
  'id_start': [1, 1, 2, 2, 3, 3],
  'id_end': [2, 3, 1, 3, 1, 2],
  'distance': [10, 20, 15, 25, 30, 35]
})

reference_id = 1

id_list = find_ids_within_ten_percentage_threshold(df.copy(), reference_id)

print(id_list)
